#!/usr/bin/env node

var
  program = require('commander'),
  util = require('util'),
  exec = require('child_process').exec,
  fs = require('fs'),
  appStarted = false,
  apps,
  init, parseFiles, parseApp, startApp, debug,

  Config = require(__dirname + '/lib/config');


debug = function (message, method) {
  if (program.debug) {
    console[(method) ? method : 'log'](message);
  }
};

init = function () {
  Config.init();
  parseApps();
};


parseApps = function () {
  var foundIt = false;

  Config.getApps().forEach(function (app) {
    app.directories.forEach(function (dir) {
      realPath = fs.realpathSync( dir );

      debug("path found : " + realPath);
      debug("current dir : " + process.cwd());

      if (realPath === process.cwd()) {
        foundIt = true;
        debug("starting app");
        startApp(app.command);
      }
    });
  });

  if (!foundIt) {
    console.log("I don't know how to start an app from this directory.");
    program.prompt("Would you like to add a new app now? [y/n]: ", function (answer) {
      var a = answer.toLowerCase();

      if (a === 'y') {
        program.prompt("Home directory of the app? [" + process.cwd() + "]: ", function (homeDir) {
          var finalHomeDir = process.cwd();

          if (homeDir !== "") {
            finalHomeDir = homeDir;
          }

          program.prompt("Start command for this app: ", function (startCmd) {
            debug("Creating app located at [" + finalHomeDir + "] using the start command [" + startCmd + "]");
            Config.addApp(finalHomeDir, startCmd);

            program.prompt("Start now? [y/n]: ", function (answer) {
              var a = answer.toLowerCase();
              if (a === 'y') {
                startApp(startCmd);
              }
              process.stdin.destroy();
            }); // start now
          }); // start command
        }); // home directory
      } else {
        process.stdin.destroy();
      }
    });
  }
};

startApp = function (cmd) {
  var proc;
  debug("running : " + cmd);
  proc = exec(cmd);
  proc.stdout.setEncoding('utf8');
  proc.stdout.on('data', util.print);
  proc.stderr.on('data', util.print);
};

program
  .version('0.0.0')
  .option('-d, --debug', 'logs debug statements')
  .option('-l, --list', 'list the apps start knows about')
  .parse(process.argv);


if (program.list) {
  var apps;

  Config.init();

  apps = Config.getApps();

  console.log('Applications managed by start');
  console.log('---------------------------');
  apps.forEach(function (app) {
    console.log(app.directories[0] + ' - ' + app.command);
  });

  console.log(apps.length + ' app(s) found.');
} else {
  init();
}



